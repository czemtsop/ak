services:
  db:
    image: postgres:15
    restart: unless-stopped
    container_name: app_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  django-web:
    build: .
    container_name: django-docker
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
    volumes:
      - .:/app
    command: >
      sh -c "uv run python manage.py migrate &&
                   uv run python manage.py collectstatic --noinput &&
                   uv run python manage.py runserver 0.0.0.0:8000"

  sqlpad:
    image: sqlpad/sqlpad:5.5
    depends_on:
      - db
    ports:
      - "3000:3000"
    environment:
      SQLPAD_AUTH_DISABLED: "true"
      SQLPAD_AUTH_DISABLED_DEFAULT_ROLE: "admin"
      SQLPAD_APP_LOG_LEVEL: debug
      SQLPAD_WEB_LOG_LEVEL: warn
      SQLPAD_CONNECTIONS__psql__name: psql
      SQLPAD_CONNECTIONS__psql__driver: postgres
      SQLPAD_CONNECTIONS__psql__host: db
      SQLPAD_CONNECTIONS__psql__username: postgres
      SQLPAD_CONNECTIONS__psql__multiStatementTransactionEnabled: "true"
      SQLPAD_CONNECTIONS__psql__idleTimeoutSeconds: 86400

volumes:
  postgres_data:
